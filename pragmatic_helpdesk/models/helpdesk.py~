# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

from openerp import models, fields, api, tools
import logging
from datetime import datetime as dt
import datetime
import time
from openerp.exceptions import ValidationError


_logger = logging.getLogger(__name__)

# from openerp.osv import fields as fields_old
class PragmaticTarea(models.Model):
    _inherit =  ['project.task']
    


class PragmaticReclamo(models.Model):
    _inherit =  ['project.issue']
    

    dias_limite = fields.Integer(string='DÃ­as para el vencimiento', compute='_compute_dias_vencimiento')
    
    @api.multi
    @api.depends('date_deadline')
    def _compute_dias_vencimiento(self):
        for reclamo in self:  
            if reclamo.date_deadline:
                fmt = '%Y-%m-%d'   
                d1 = dt.strptime(time.strftime('%Y-%m-%d'), fmt)
                d2 = dt.strptime(reclamo.date_deadline, fmt)
                reclamo.dias_limite = str((d2-d1).days) 


class PragmaticEncabezado(models.Model):
    _inherit = 'res.company'
    _description = 'Encabezado reporte'  
    encabezado =fields.Binary(string='Imagen encabezado')
    pie_pagina =fields.Binary(string='Pie de pagina')
            
    
    
   
